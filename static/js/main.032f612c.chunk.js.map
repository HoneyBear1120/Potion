{"version":3,"sources":["components/layout/NFTItem.js","components/layout/Landing.js","actions/types.js","reducers/alert.js","reducers/auth.js","reducers/profile.js","reducers/post.js","reducers/index.js","utils/api.js","utils/setAuthToken.js","store.js","actions/auth.js","App.js","index.js"],"names":["NFTItem","props","className","onClick","selectNFT","id","title","src","url","selected","Landing","useState","top","left","dialogPos","setDialogPos","showDialog","setShowDialog","showCraft","setShowCraft","selectedNFT1","setSelectedNFT1","selectedNFT2","setSelectedNFT2","showCraftVideo","setShowCraftVideo","videoRef","useRef","useEffect","window","addEventListener","event","y","x","removeEventListener","onSelectNFT1","onSelectNFT2","current","play","ref","type","viewBox","d","fill","onMouseEnter","onMouseLeave","style","SET_ALERT","REMOVE_ALERT","REGISTER_SUCCESS","USER_LOADED","AUTH_ERROR","LOGIN_SUCCESS","LOGOUT","GET_PROFILE","GET_PROFILES","GET_REPOS","NO_REPOS","UPDATE_PROFILE","CLEAR_PROFILE","PROFILE_ERROR","ACCOUNT_DELETED","GET_POSTS","GET_POST","POST_ERROR","UPDATE_LIKES","DELETE_POST","ADD_POST","ADD_COMMENT","REMOVE_COMMENT","initialState","alertReducer","state","action","payload","filter","alert","token","localStorage","getItem","isAuthenticated","loading","user","authReducer","profile","profiles","repos","error","profileReducer","posts","post","postReducer","_id","map","likes","comments","comment","combineReducers","auth","api","axios","create","baseURL","headers","interceptors","response","use","res","err","status","store","dispatch","Promise","reject","setAuthToken","defaults","common","setItem","removeItem","middleware","thunk","createStore","rootReducer","composeWithDevTools","applyMiddleware","currentState","getState","subscribe","previousState","loadUser","get","data","App","path","element","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.032f612c.chunk.js","sourcesContent":["import React from 'react';\r\n\r\nconst NFTItem = (props) => {\r\n    return (\r\n        <div className=\"NFTItem cursor-pointer\" onClick={() => props.selectNFT(props.id)}>\r\n            <div className='title'>{props.title} #{props.id}</div>\r\n            <img src={props.url}/>\r\n            <div className={'selectbtn ' + (props.selected == props.id ? 'selected' : '')}>select</div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default NFTItem;","import React from 'react';\nimport { useState, useEffect, useRef } from 'react';\nimport { Link, Navigate } from 'react-router-dom';\nimport { connect } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport NFTItem from './NFTItem';\nconst Landing = () => {\n\n\tconst [dialogPos, setDialogPos] = useState({ top: 0, left: 0 });\n\tconst [showDialog, setShowDialog] = useState(false);\n\tconst [showCraft, setShowCraft] = useState(false);\n\tconst [selectedNFT1, setSelectedNFT1] = useState(0);\n\tconst [selectedNFT2, setSelectedNFT2] = useState(0);\n\tconst [showCraftVideo, setShowCraftVideo] = useState(false);\n\tconst videoRef = useRef(null);\n\n\tuseEffect(() => {\n\t\twindow.addEventListener(\"mousemove\", function (event) {\n\t\t\tsetDialogPos({ top: event.y - 350 * 2 / 3 - 45, left: event.x - 440 + 50 });\n\t\t});\n\t\treturn () => window.removeEventListener('mousemove');\n\t}, []);\n\n\tconst onSelectNFT1 = (id) => {\n\t\tsetSelectedNFT1(id);\n\t}\n\n\tconst onSelectNFT2 = (id) => {\n\t\tsetSelectedNFT2(id);\n\t}\n\n\tconst onCraft = () => {\n\t\tif (selectedNFT1 != 0 && selectedNFT2 != 0) {\n\t\t\tsetShowCraftVideo(true);\n\t\t\t\n\t\t}\n\t}\n\n\tuseEffect(() => {\n\t\tif(videoRef.current) {\n\t\t\tvideoRef.current.play();\n\t\t}\n\t}, [videoRef.current]);\n\n\treturn (\n\t\t<div className='minting'>\n\t\t\t{!showCraft ?\n\t\t\t\t<div className=\"main\">\n\t\t\t\t\t<div className=\"background\">\n\t\t\t\t\t\t<img src=\"/img/background.gif\" />\n\t\t\t\t\t</div>\n\t\t\t\t\t<svg className=\"absolute pos-center w-full z-10\" viewBox=\"0 0 754 356\">\n\t\t\t\t\t\t{/* <path className=\"hover:stroke-primary/70 hover:fill-primary/30 cursor-pointer\" d=\"M 471 86 L 466 85 L 443 108 L 442 112 L 445 115 V 134 H 449 L 484 152 V 155 H 486 L 521 138 V 118 L 508 105 Z\" fill=\"transparent\"></path> */}\n\t\t\t\t\t\t<path className=\"hover:stroke-primary/70 hover:fill-primary/30 cursor-pointer\" d=\"M 628 103 L 583 127 L 562 147 V 152 L 551 164 V 167 L 562 172 L 552 183 V 191 L 571 200 L 582 196 L 603 204 L 630 192 L 640 196 L 651 190 V 179 L 647 176 V 147 L 648 146 V 143 Z\" fill=\"transparent\" onMouseEnter={() => setShowDialog(true)} onMouseLeave={() => setShowDialog(false)} onClick={() => setShowCraft(true)}></path>\n\t\t\t\t\t</svg>\n\t\t\t\t\t{showDialog ?\n\t\t\t\t\t\t<div className=\"hoverDlg\" style={{ top: dialogPos.top + \"px\", left: dialogPos.left + \"px\" }}>\n\t\t\t\t\t\t\t<img src=\"/img/dialog.png\" className=\"dialog\" />\n\t\t\t\t\t\t\t<img src=\"/img/Polygon.png\" className=\"polygon\" />\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t:\n\t\t\t\t\t\t<></>\n\t\t\t\t\t}\n\t\t\t\t</div>\n\t\t\t\t:\n\t\t\t\t<div className='craft'>\n\t\t\t\t\t<div className='background'>\n\t\t\t\t\t\t<img src=\"/img/AlchemyRoomMain.png\" />\n\t\t\t\t\t\t<div className='mask' />\n\t\t\t\t\t</div>\n\t\t\t\t\t<div className='main-content'>\n\t\t\t\t\t\t<div className='header'>\n\t\t\t\t\t\t\t<div className='button backbtn cursor-pointer'>\n\t\t\t\t\t\t\t\t<img src=\"/img/ic_round-arrow-back.png\" />\n\t\t\t\t\t\t\t\t<div className='btntext'>BACK</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t<div className='button connectbtn cursor-pointer'>\n\t\t\t\t\t\t\t\t<img src=\"/img/fluent_wallet-credit-card-32-filled.png\" />\n\t\t\t\t\t\t\t\t<div className='btntext'>CONNECT TO WALLET</div>\n\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t<div className='content'>\n\t\t\t\t\t\t\t{!showCraftVideo ?\n\t\t\t\t\t\t\t\t<>\n\t\t\t\t\t\t\t\t\t<div className='NFTList'>\n\t\t\t\t\t\t\t\t\t\t<NFTItem title=\"ingredient\" id=\"1\" url=\"/img/Crypto_Kong_10_1637564071932.png\" selected={selectedNFT1} selectNFT={onSelectNFT1} />\n\t\t\t\t\t\t\t\t\t\t<NFTItem title=\"ingredient\" id=\"2\" url=\"/img/f1228562169668c1465acb957f77aee71.png\" selected={selectedNFT1} selectNFT={onSelectNFT1} />\n\t\t\t\t\t\t\t\t\t\t<NFTItem title=\"ingredient\" id=\"21\" url=\"/img/Bored_Ape_19_1637134170304.png\" selected={selectedNFT1} selectNFT={onSelectNFT1} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t\t<div className='NFTList'>\n\t\t\t\t\t\t\t\t\t\t<NFTItem title=\"ingredient\" id=\"32\" url=\"/img/f1228562169668c1465acb957f77aee72.png\" selected={selectedNFT2} selectNFT={onSelectNFT2} />\n\t\t\t\t\t\t\t\t\t\t<NFTItem title=\"ingredient\" id=\"51\" url=\"/img/9dc209237b0163fef20c8662d6dc39aa1.png\" selected={selectedNFT2} selectNFT={onSelectNFT2} />\n\t\t\t\t\t\t\t\t\t\t<NFTItem title=\"ingredient\" id=\"15\" url=\"/img/Crypto_Kong_32_1639049754891.png\" selected={selectedNFT2} selectNFT={onSelectNFT2} />\n\t\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t\t</>\n\t\t\t\t\t\t\t\t: \n\t\t\t\t\t\t\t\t<div className='videoTag'>\n\t\t\t\t\t\t\t\t\t<video className='backgroundimg' ref={videoRef}>\n\t\t\t\t\t\t\t\t\t\t<source src=\"http://commondatastorage.googleapis.com/gtv-videos-bucket/sample/BigBuckBunny.mp4\" type=\"video/mp4\"></source>\n\t\t\t\t\t\t\t\t\t</video>\n\t\t\t\t\t\t\t\t\t<div className='mask'></div>\n\t\t\t\t\t\t\t\t\t{/* <img src=\"/img/play.png\" className='playbtn cursor-pointer absolute'/> */}\n\t\t\t\t\t\t\t\t</div>\n\t\t\t\t\t\t\t}\n\t\t\t\t\t\t</div>\n\t\t\t\t\t\t{!showCraftVideo ?\n\t\t\t\t\t\t\t<div className={'button cursor-pointer craftbtn ' + (selectedNFT1 == 0 || selectedNFT2 == 0 ? 'disabled' : '')} onClick={onCraft}>craft</div>\n\t\t\t\t\t\t\t: <></>\n\t\t\t\t\t\t}\n\t\t\t\t\t</div>\n\t\t\t\t</div>\n\t\t\t}\n\t\t</div>\n\t);\n};\n\nexport default Landing;\n","export const SET_ALERT = 'SET_ALERT';\nexport const REMOVE_ALERT = 'REMOVE_ALERT';\nexport const REGISTER_SUCCESS = 'REGISTER_SUCCESS';\nexport const REGISTER_FAIL = 'REGISTER_FAIL';\nexport const USER_LOADED = 'USER_LOADED';\nexport const AUTH_ERROR = 'AUTH_ERROR';\nexport const LOGIN_SUCCESS = 'LOGIN_SUCCESS';\nexport const LOGIN_FAIL = 'LOGIN_FAIL';\nexport const LOGOUT = 'LOGOUT';\nexport const GET_PROFILE = 'GET_PROFILE';\nexport const GET_PROFILES = 'GET_PROFILES';\nexport const GET_REPOS = 'GET_REPOS';\nexport const NO_REPOS = 'NO_REPOS';\nexport const UPDATE_PROFILE = 'UPDATE_PROFILE';\nexport const CLEAR_PROFILE = 'CLEAR_PROFILE';\nexport const PROFILE_ERROR = 'PROFILE_ERROR';\nexport const ACCOUNT_DELETED = 'ACCOUNT_DELETED';\nexport const GET_POSTS = 'GET_POSTS';\nexport const GET_POST = 'GET_POST';\nexport const POST_ERROR = 'POST_ERROR';\nexport const UPDATE_LIKES = 'UPDATE_LIKES';\nexport const DELETE_POST = 'DELETE_POST';\nexport const ADD_POST = 'ADD_POST';\nexport const ADD_COMMENT = 'ADD_COMMENT';\nexport const REMOVE_COMMENT = 'REMOVE_COMMENT';\n","import { SET_ALERT, REMOVE_ALERT } from '../actions/types';\n\nconst initialState = [];\n\nfunction alertReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case SET_ALERT:\n      return [...state, payload];\n    case REMOVE_ALERT:\n      return state.filter((alert) => alert.id !== payload);\n    default:\n      return state;\n  }\n}\n\nexport default alertReducer;\n","import {\n  REGISTER_SUCCESS,\n  //REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  //LOGIN_FAIL,\n  LOGOUT,\n  ACCOUNT_DELETED\n} from '../actions/types';\n\nconst initialState = {\n  token: localStorage.getItem('token'),\n  isAuthenticated: null,\n  loading: true,\n  user: null\n};\n\nfunction authReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case USER_LOADED:\n      return {\n        ...state,\n        isAuthenticated: true,\n        loading: false,\n        user: payload\n      };\n    case REGISTER_SUCCESS:\n    case LOGIN_SUCCESS:\n      return {\n        ...state,\n        ...payload,\n        isAuthenticated: true,\n        loading: false\n      };\n    case ACCOUNT_DELETED:\n    case AUTH_ERROR:\n    case LOGOUT:\n      return {\n        ...state,\n        token: null,\n        isAuthenticated: false,\n        loading: false,\n        user: null\n      };\n    default:\n      return state;\n  }\n}\n\nexport default authReducer;\n","import {\n  GET_PROFILE,\n  PROFILE_ERROR,\n  CLEAR_PROFILE,\n  UPDATE_PROFILE,\n  GET_PROFILES,\n  GET_REPOS,\n  NO_REPOS\n} from '../actions/types';\n\nconst initialState = {\n  profile: null,\n  profiles: [],\n  repos: [],\n  loading: true,\n  error: {}\n};\n\nfunction profileReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_PROFILE:\n    case UPDATE_PROFILE:\n      return {\n        ...state,\n        profile: payload,\n        loading: false\n      };\n    case GET_PROFILES:\n      return {\n        ...state,\n        profiles: payload,\n        loading: false\n      };\n    case PROFILE_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false,\n        profile: null\n      };\n    case CLEAR_PROFILE:\n      return {\n        ...state,\n        profile: null,\n        repos: []\n      };\n    case GET_REPOS:\n      return {\n        ...state,\n        repos: payload,\n        loading: false\n      };\n    case NO_REPOS:\n      return {\n        ...state,\n        repos: []\n      };\n    default:\n      return state;\n  }\n}\n\nexport default profileReducer;\n","import {\n  GET_POSTS,\n  POST_ERROR,\n  UPDATE_LIKES,\n  DELETE_POST,\n  ADD_POST,\n  GET_POST,\n  ADD_COMMENT,\n  REMOVE_COMMENT\n} from '../actions/types';\n\nconst initialState = {\n  posts: [],\n  post: null,\n  loading: true,\n  error: {}\n};\n\nfunction postReducer(state = initialState, action) {\n  const { type, payload } = action;\n\n  switch (type) {\n    case GET_POSTS:\n      return {\n        ...state,\n        posts: payload,\n        loading: false\n      };\n    case GET_POST:\n      return {\n        ...state,\n        post: payload,\n        loading: false\n      };\n    case ADD_POST:\n      return {\n        ...state,\n        posts: [payload, ...state.posts],\n        loading: false\n      };\n    case DELETE_POST:\n      return {\n        ...state,\n        posts: state.posts.filter((post) => post._id !== payload),\n        loading: false\n      };\n    case POST_ERROR:\n      return {\n        ...state,\n        error: payload,\n        loading: false\n      };\n    case UPDATE_LIKES:\n      return {\n        ...state,\n        posts: state.posts.map((post) =>\n          post._id === payload.id ? { ...post, likes: payload.likes } : post\n        ),\n        loading: false\n      };\n    case ADD_COMMENT:\n      return {\n        ...state,\n        post: { ...state.post, comments: payload },\n        loading: false\n      };\n    case REMOVE_COMMENT:\n      return {\n        ...state,\n        post: {\n          ...state.post,\n          comments: state.post.comments.filter(\n            (comment) => comment._id !== payload\n          )\n        },\n        loading: false\n      };\n    default:\n      return state;\n  }\n}\n\nexport default postReducer;\n","import { combineReducers } from 'redux';\nimport alert from './alert';\nimport auth from './auth';\nimport profile from './profile';\nimport post from './post';\n\nexport default combineReducers({\n  alert,\n  auth,\n  profile,\n  post\n});\n","import axios from 'axios';\nimport store from '../store';\nimport { LOGOUT } from '../actions/types';\n\n// Create an instance of axios\nconst api = axios.create({\n  baseURL: '/api',\n  headers: {\n    'Content-Type': 'application/json'\n  }\n});\n/*\n  NOTE: intercept any error responses from the api\n and check if the token is no longer valid.\n ie. Token has expired or user is no longer\n authenticated.\n logout the user if the token has expired\n*/\n\napi.interceptors.response.use(\n  (res) => res,\n  (err) => {\n    if (err.response.status === 401) {\n      store.dispatch({ type: LOGOUT });\n    }\n    return Promise.reject(err);\n  }\n);\n\nexport default api;\n","import api from './api';\n\n// store our JWT in LS and set axios headers if we do have a token\n\nconst setAuthToken = (token) => {\n  if (token) {\n    api.defaults.headers.common['x-auth-token'] = token;\n    localStorage.setItem('token', token);\n  } else {\n    delete api.defaults.headers.common['x-auth-token'];\n    localStorage.removeItem('token');\n  }\n};\n\nexport default setAuthToken;\n","import { createStore, applyMiddleware } from 'redux';\nimport { composeWithDevTools } from 'redux-devtools-extension';\nimport thunk from 'redux-thunk';\nimport rootReducer from './reducers';\nimport setAuthToken from './utils/setAuthToken';\n\nconst initialState = {};\n\nconst middleware = [thunk];\n\nconst store = createStore(\n  rootReducer,\n  initialState,\n  composeWithDevTools(applyMiddleware(...middleware))\n);\n\n/*\n  NOTE: set up a store subscription listener\n  to store the users token in localStorage\n */\n\n/*\n  initialize current state from redux store for subscription comparison\n  preventing undefined error\n */\nlet currentState = store.getState();\n\nstore.subscribe(() => {\n  // keep track of the previous and current state to compare changes\n  let previousState = currentState;\n  currentState = store.getState();\n  // if the token changes set the value in localStorage and axios headers\n  if (previousState.auth.token !== currentState.auth.token) {\n    const token = currentState.auth.token;\n    setAuthToken(token);\n  }\n});\n\nexport default store;\n","import api from '../utils/api';\nimport { setAlert } from './alert';\nimport {\n  REGISTER_SUCCESS,\n  REGISTER_FAIL,\n  USER_LOADED,\n  AUTH_ERROR,\n  LOGIN_SUCCESS,\n  LOGIN_FAIL,\n  LOGOUT\n} from './types';\n\n/*\n  NOTE: we don't need a config object for axios as the\n default headers in axios are already Content-Type: application/json\n also axios stringifies and parses JSON for you, so no need for \n JSON.stringify or JSON.parse\n*/\n\n// Load User\nexport const loadUser = () => async (dispatch) => {\n  try {\n    const res = await api.get('/auth');\n\n    dispatch({\n      type: USER_LOADED,\n      payload: res.data\n    });\n  } catch (err) {\n    dispatch({\n      type: AUTH_ERROR\n    });\n  }\n};\n\n// Register User\nexport const register = (formData) => async (dispatch) => {\n  try {\n    const res = await api.post('/users', formData);\n\n    dispatch({\n      type: REGISTER_SUCCESS,\n      payload: res.data\n    });\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: REGISTER_FAIL\n    });\n  }\n};\n\n// Login User\nexport const login = (email, password) => async (dispatch) => {\n  const body = { email, password };\n\n  try {\n    const res = await api.post('/auth', body);\n\n    dispatch({\n      type: LOGIN_SUCCESS,\n      payload: res.data\n    });\n\n    dispatch(loadUser());\n  } catch (err) {\n    const errors = err.response.data.errors;\n\n    if (errors) {\n      errors.forEach((error) => dispatch(setAlert(error.msg, 'danger')));\n    }\n\n    dispatch({\n      type: LOGIN_FAIL\n    });\n  }\n};\n\n// Logout\nexport const logout = () => ({ type: LOGOUT });\n","import React, { useEffect } from 'react';\nimport { BrowserRouter as Router, Route, Routes } from 'react-router-dom';\n\nimport Landing from './components/layout/Landing';\nimport { LOGOUT } from './actions/types';\n\n// Redux\nimport { Provider } from 'react-redux';\nimport store from './store';\nimport { loadUser } from './actions/auth';\nimport setAuthToken from './utils/setAuthToken';\n\nimport './App.css';\n\nconst App = () => {\n  useEffect(() => {\n    // check for token in LS when app first runs\n    if (localStorage.token) {\n      // if there is a token set axios headers for all requests\n      setAuthToken(localStorage.token);\n    }\n    // try to fetch a user, if no token or invalid token we\n    // will get a 401 response from our API\n    store.dispatch(loadUser());\n\n    // log user out from all tabs if they log out in one tab\n    window.addEventListener('storage', () => {\n      if (!localStorage.token) store.dispatch({ type: LOGOUT });\n    });\n  }, []);\n\n  return (\n    <Provider store={store}>\n      <Router>\n        {/* <Navbar />\n        <Alert /> */}\n        <Routes>\n          <Route path=\"/\" element={<Landing />} />\n          \n        </Routes>\n      </Router>\n    </Provider>\n  );\n};\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\n\nReactDOM.render(<App />, document.getElementById('root'));\n"],"sourceRoot":""}